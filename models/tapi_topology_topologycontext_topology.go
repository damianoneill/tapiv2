// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiTopologyTopologycontextTopology tapi topology topologycontext topology
// swagger:model tapi.topology.topologycontext.Topology
type TapiTopologyTopologycontextTopology struct {
	TapiCommonGlobalClass

	// none
	BoundaryNodeEdgePoint []*TapiTopologyNodeEdgePointRef `json:"boundary-node-edge-point"`

	// none
	LayerProtocolName []TapiCommonLayerProtocolName `json:"layer-protocol-name"`

	// none
	Link []*TapiTopologyLink `json:"link"`

	// none
	Node []*TapiTopologyTopologyNode `json:"node"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *TapiTopologyTopologycontextTopology) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 TapiCommonGlobalClass
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.TapiCommonGlobalClass = aO0

	// AO1
	var dataAO1 struct {
		BoundaryNodeEdgePoint []*TapiTopologyNodeEdgePointRef `json:"boundary-node-edge-point"`

		LayerProtocolName []TapiCommonLayerProtocolName `json:"layer-protocol-name"`

		Link []*TapiTopologyLink `json:"link"`

		Node []*TapiTopologyTopologyNode `json:"node"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.BoundaryNodeEdgePoint = dataAO1.BoundaryNodeEdgePoint

	m.LayerProtocolName = dataAO1.LayerProtocolName

	m.Link = dataAO1.Link

	m.Node = dataAO1.Node

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m TapiTopologyTopologycontextTopology) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.TapiCommonGlobalClass)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	var dataAO1 struct {
		BoundaryNodeEdgePoint []*TapiTopologyNodeEdgePointRef `json:"boundary-node-edge-point"`

		LayerProtocolName []TapiCommonLayerProtocolName `json:"layer-protocol-name"`

		Link []*TapiTopologyLink `json:"link"`

		Node []*TapiTopologyTopologyNode `json:"node"`
	}

	dataAO1.BoundaryNodeEdgePoint = m.BoundaryNodeEdgePoint

	dataAO1.LayerProtocolName = m.LayerProtocolName

	dataAO1.Link = m.Link

	dataAO1.Node = m.Node

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this tapi topology topologycontext topology
func (m *TapiTopologyTopologycontextTopology) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with TapiCommonGlobalClass
	if err := m.TapiCommonGlobalClass.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBoundaryNodeEdgePoint(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLayerProtocolName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLink(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiTopologyTopologycontextTopology) validateBoundaryNodeEdgePoint(formats strfmt.Registry) error {

	if swag.IsZero(m.BoundaryNodeEdgePoint) { // not required
		return nil
	}

	for i := 0; i < len(m.BoundaryNodeEdgePoint); i++ {
		if swag.IsZero(m.BoundaryNodeEdgePoint[i]) { // not required
			continue
		}

		if m.BoundaryNodeEdgePoint[i] != nil {
			if err := m.BoundaryNodeEdgePoint[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("boundary-node-edge-point" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *TapiTopologyTopologycontextTopology) validateLayerProtocolName(formats strfmt.Registry) error {

	if swag.IsZero(m.LayerProtocolName) { // not required
		return nil
	}

	for i := 0; i < len(m.LayerProtocolName); i++ {

		if err := m.LayerProtocolName[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("layer-protocol-name" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *TapiTopologyTopologycontextTopology) validateLink(formats strfmt.Registry) error {

	if swag.IsZero(m.Link) { // not required
		return nil
	}

	for i := 0; i < len(m.Link); i++ {
		if swag.IsZero(m.Link[i]) { // not required
			continue
		}

		if m.Link[i] != nil {
			if err := m.Link[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("link" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *TapiTopologyTopologycontextTopology) validateNode(formats strfmt.Registry) error {

	if swag.IsZero(m.Node) { // not required
		return nil
	}

	for i := 0; i < len(m.Node); i++ {
		if swag.IsZero(m.Node[i]) { // not required
			continue
		}

		if m.Node[i] != nil {
			if err := m.Node[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("node" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiTopologyTopologycontextTopology) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiTopologyTopologycontextTopology) UnmarshalBinary(b []byte) error {
	var res TapiTopologyTopologycontextTopology
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
