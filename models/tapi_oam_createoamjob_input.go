// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiOamCreateoamjobInput tapi oam createoamjob input
// swagger:model tapi.oam.createoamjob.Input
type TapiOamCreateoamjobInput struct {
	TapiEthInputAugmentation1

	TapiEthInputAugmentation2

	TapiEthInputAugmentation3

	TapiEthInputAugmentation4

	TapiEthInputAugmentation5

	TapiEthInputAugmentation6

	TapiEthInputAugmentation7

	// none
	OamJobType string `json:"oam-job-type,omitempty"`

	// none
	OamProfileID string `json:"oam-profile-id,omitempty"`

	// none
	OamServiceID string `json:"oam-service-id,omitempty"`

	// none
	OamServicePointID []string `json:"oam-service-point-id"`

	// none
	Schedule string `json:"schedule,omitempty"`

	// none
	State TapiCommonAdministrativeState `json:"state,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *TapiOamCreateoamjobInput) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 TapiEthInputAugmentation1
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.TapiEthInputAugmentation1 = aO0

	// AO1
	var aO1 TapiEthInputAugmentation2
	if err := swag.ReadJSON(raw, &aO1); err != nil {
		return err
	}
	m.TapiEthInputAugmentation2 = aO1

	// AO2
	var aO2 TapiEthInputAugmentation3
	if err := swag.ReadJSON(raw, &aO2); err != nil {
		return err
	}
	m.TapiEthInputAugmentation3 = aO2

	// AO3
	var aO3 TapiEthInputAugmentation4
	if err := swag.ReadJSON(raw, &aO3); err != nil {
		return err
	}
	m.TapiEthInputAugmentation4 = aO3

	// AO4
	var aO4 TapiEthInputAugmentation5
	if err := swag.ReadJSON(raw, &aO4); err != nil {
		return err
	}
	m.TapiEthInputAugmentation5 = aO4

	// AO5
	var aO5 TapiEthInputAugmentation6
	if err := swag.ReadJSON(raw, &aO5); err != nil {
		return err
	}
	m.TapiEthInputAugmentation6 = aO5

	// AO6
	var aO6 TapiEthInputAugmentation7
	if err := swag.ReadJSON(raw, &aO6); err != nil {
		return err
	}
	m.TapiEthInputAugmentation7 = aO6

	// AO7
	var dataAO7 struct {
		OamJobType string `json:"oam-job-type,omitempty"`

		OamProfileID string `json:"oam-profile-id,omitempty"`

		OamServiceID string `json:"oam-service-id,omitempty"`

		OamServicePointID []string `json:"oam-service-point-id"`

		Schedule string `json:"schedule,omitempty"`

		State TapiCommonAdministrativeState `json:"state,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO7); err != nil {
		return err
	}

	m.OamJobType = dataAO7.OamJobType

	m.OamProfileID = dataAO7.OamProfileID

	m.OamServiceID = dataAO7.OamServiceID

	m.OamServicePointID = dataAO7.OamServicePointID

	m.Schedule = dataAO7.Schedule

	m.State = dataAO7.State

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m TapiOamCreateoamjobInput) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 8)

	aO0, err := swag.WriteJSON(m.TapiEthInputAugmentation1)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	aO1, err := swag.WriteJSON(m.TapiEthInputAugmentation2)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO1)

	aO2, err := swag.WriteJSON(m.TapiEthInputAugmentation3)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO2)

	aO3, err := swag.WriteJSON(m.TapiEthInputAugmentation4)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO3)

	aO4, err := swag.WriteJSON(m.TapiEthInputAugmentation5)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO4)

	aO5, err := swag.WriteJSON(m.TapiEthInputAugmentation6)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO5)

	aO6, err := swag.WriteJSON(m.TapiEthInputAugmentation7)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO6)

	var dataAO7 struct {
		OamJobType string `json:"oam-job-type,omitempty"`

		OamProfileID string `json:"oam-profile-id,omitempty"`

		OamServiceID string `json:"oam-service-id,omitempty"`

		OamServicePointID []string `json:"oam-service-point-id"`

		Schedule string `json:"schedule,omitempty"`

		State TapiCommonAdministrativeState `json:"state,omitempty"`
	}

	dataAO7.OamJobType = m.OamJobType

	dataAO7.OamProfileID = m.OamProfileID

	dataAO7.OamServiceID = m.OamServiceID

	dataAO7.OamServicePointID = m.OamServicePointID

	dataAO7.Schedule = m.Schedule

	dataAO7.State = m.State

	jsonDataAO7, errAO7 := swag.WriteJSON(dataAO7)
	if errAO7 != nil {
		return nil, errAO7
	}
	_parts = append(_parts, jsonDataAO7)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this tapi oam createoamjob input
func (m *TapiOamCreateoamjobInput) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with TapiEthInputAugmentation1
	if err := m.TapiEthInputAugmentation1.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthInputAugmentation2
	if err := m.TapiEthInputAugmentation2.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthInputAugmentation3
	if err := m.TapiEthInputAugmentation3.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthInputAugmentation4
	if err := m.TapiEthInputAugmentation4.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthInputAugmentation5
	if err := m.TapiEthInputAugmentation5.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthInputAugmentation6
	if err := m.TapiEthInputAugmentation6.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthInputAugmentation7
	if err := m.TapiEthInputAugmentation7.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiOamCreateoamjobInput) validateState(formats strfmt.Registry) error {

	if swag.IsZero(m.State) { // not required
		return nil
	}

	if err := m.State.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("state")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiOamCreateoamjobInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiOamCreateoamjobInput) UnmarshalBinary(b []byte) error {
	var res TapiOamCreateoamjobInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
