// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiEthEthOamTestLoopbackCommonPac tapi eth eth oam test loopback common pac
// swagger:model tapi.eth.EthOamTestLoopbackCommonPac
type TapiEthEthOamTestLoopbackCommonPac struct {

	// G.8052: This parameter provides the length (in number of octet) of the optional Data TLV to be included in the TST frame.
	DataTlvLength int32 `json:"data-tlv-length,omitempty"`

	// G.8052: This parameter provides the eligibility of frames with unicast ETH-TST information to be discarded when congestion conditions are encountered.
	//                 G.8052: This parameter provides the eligibility of frames with unicast ETH-LB information to be discarded when congestion conditions are encountered.
	DropEligibility *bool `json:"drop-eligibility,omitempty"`

	// G.8052: This parameter provides the periodicity of the TST OAM messages.
	//                 G.8052: This parameter provides the periodicity of the LBM OAM messages used in the LB Series process.
	Period TapiEthOamPeriod `json:"period,omitempty"`
}

// Validate validates this tapi eth eth oam test loopback common pac
func (m *TapiEthEthOamTestLoopbackCommonPac) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePeriod(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiEthEthOamTestLoopbackCommonPac) validatePeriod(formats strfmt.Registry) error {

	if swag.IsZero(m.Period) { // not required
		return nil
	}

	if err := m.Period.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("period")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiEthEthOamTestLoopbackCommonPac) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiEthEthOamTestLoopbackCommonPac) UnmarshalBinary(b []byte) error {
	var res TapiEthEthOamTestLoopbackCommonPac
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
