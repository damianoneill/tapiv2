// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiOamCurrentData tapi oam current data
// swagger:model tapi.oam.CurrentData
type TapiOamCurrentData struct {
	TapiCommonLocalClass

	// none
	ElapsedTime *TapiCommonTimeInterval `json:"elapsed-time,omitempty"`

	// in case of 24hr Current Data, at least 1 History Data.
	//                 In case of 15min Current Data, at least 16 History Data.
	//                 In case of <15min, the number of History Data shall be able to cover a span of 4 hours.
	HistoryData []*TapiOamHistoryData `json:"history-data"`

	// This attribute indicates the start of the current monitoring interval.
	//                 The value is bound to the quarter of an hour in case of a 15 minute interval and bound to the hour in case of a 24 hour interval.
	PeriodStartTime string `json:"period-start-time,omitempty"`

	// none
	PmDataPac *TapiOamPmDataPac `json:"pm-data-pac,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *TapiOamCurrentData) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 TapiCommonLocalClass
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.TapiCommonLocalClass = aO0

	// AO1
	var dataAO1 struct {
		ElapsedTime *TapiCommonTimeInterval `json:"elapsed-time,omitempty"`

		HistoryData []*TapiOamHistoryData `json:"history-data"`

		PeriodStartTime string `json:"period-start-time,omitempty"`

		PmDataPac *TapiOamPmDataPac `json:"pm-data-pac,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.ElapsedTime = dataAO1.ElapsedTime

	m.HistoryData = dataAO1.HistoryData

	m.PeriodStartTime = dataAO1.PeriodStartTime

	m.PmDataPac = dataAO1.PmDataPac

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m TapiOamCurrentData) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.TapiCommonLocalClass)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	var dataAO1 struct {
		ElapsedTime *TapiCommonTimeInterval `json:"elapsed-time,omitempty"`

		HistoryData []*TapiOamHistoryData `json:"history-data"`

		PeriodStartTime string `json:"period-start-time,omitempty"`

		PmDataPac *TapiOamPmDataPac `json:"pm-data-pac,omitempty"`
	}

	dataAO1.ElapsedTime = m.ElapsedTime

	dataAO1.HistoryData = m.HistoryData

	dataAO1.PeriodStartTime = m.PeriodStartTime

	dataAO1.PmDataPac = m.PmDataPac

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this tapi oam current data
func (m *TapiOamCurrentData) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with TapiCommonLocalClass
	if err := m.TapiCommonLocalClass.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateElapsedTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHistoryData(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePmDataPac(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiOamCurrentData) validateElapsedTime(formats strfmt.Registry) error {

	if swag.IsZero(m.ElapsedTime) { // not required
		return nil
	}

	if m.ElapsedTime != nil {
		if err := m.ElapsedTime.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("elapsed-time")
			}
			return err
		}
	}

	return nil
}

func (m *TapiOamCurrentData) validateHistoryData(formats strfmt.Registry) error {

	if swag.IsZero(m.HistoryData) { // not required
		return nil
	}

	for i := 0; i < len(m.HistoryData); i++ {
		if swag.IsZero(m.HistoryData[i]) { // not required
			continue
		}

		if m.HistoryData[i] != nil {
			if err := m.HistoryData[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("history-data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *TapiOamCurrentData) validatePmDataPac(formats strfmt.Registry) error {

	if swag.IsZero(m.PmDataPac) { // not required
		return nil
	}

	if m.PmDataPac != nil {
		if err := m.PmDataPac.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pm-data-pac")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiOamCurrentData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiOamCurrentData) UnmarshalBinary(b []byte) error {
	var res TapiOamCurrentData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
