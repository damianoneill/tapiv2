// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiEthTrafficShapingPac tapi eth traffic shaping pac
// swagger:model tapi.eth.TrafficShapingPac
type TapiEthTrafficShapingPac struct {

	// This attribute indicates the direction of the shaping function. The value of true means that the shaping (modeled as a TCS Source according to G.8021) is associated with the source part of the containing CTP. The value of false means that the shaping (modeled as a TCS Source according to G.8021) is associated with the sink part of the containing CTP.
	Codirectional *bool `json:"codirectional,omitempty"`

	// This attribute configures the Priority Splitter function for the mapping of the Ethernet frame priority (ETH_CI_P) values to the output queue.
	PrioConfigList []*TapiEthPriorityConfiguration `json:"prio-config-list"`

	// This attribute configures the Queue depth and Dropping threshold parameters of the Queue process. The Queue depth sets the maximum size of the queue in bytes. An incoming ETH_CI traffic unit is dropped if there is insufficient space in the queue to hold the whole unit. The Dropping threshold sets the threshold of the queue. If the queue is filled beyond this threshold, incoming ETH_CI traffic units accompanied by the ETH_CI_DE signal set are dropped.
	QueueConfigList []*TapiEthQueueConfiguration `json:"queue-config-list"`

	// This attribute configures the scheduler process. The value of this attribute is for further study because it is for further study in G.8021.
	//                 Scheduler is a pointer to a Scheduler object, which is to be defined in the future (because in G.8021, this is FFS).
	//                 Note that the only significance of the GTCS function defined in G.8021 is the use of a common scheduler for shaping. Given that, G.8052 models the common scheduler feature by having a common value for this attribute.
	SchedConfig string `json:"sched-config,omitempty"`
}

// Validate validates this tapi eth traffic shaping pac
func (m *TapiEthTrafficShapingPac) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePrioConfigList(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateQueueConfigList(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiEthTrafficShapingPac) validatePrioConfigList(formats strfmt.Registry) error {

	if swag.IsZero(m.PrioConfigList) { // not required
		return nil
	}

	for i := 0; i < len(m.PrioConfigList); i++ {
		if swag.IsZero(m.PrioConfigList[i]) { // not required
			continue
		}

		if m.PrioConfigList[i] != nil {
			if err := m.PrioConfigList[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("prio-config-list" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *TapiEthTrafficShapingPac) validateQueueConfigList(formats strfmt.Registry) error {

	if swag.IsZero(m.QueueConfigList) { // not required
		return nil
	}

	for i := 0; i < len(m.QueueConfigList); i++ {
		if swag.IsZero(m.QueueConfigList[i]) { // not required
			continue
		}

		if m.QueueConfigList[i] != nil {
			if err := m.QueueConfigList[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("queue-config-list" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiEthTrafficShapingPac) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiEthTrafficShapingPac) UnmarshalBinary(b []byte) error {
	var res TapiEthTrafficShapingPac
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
