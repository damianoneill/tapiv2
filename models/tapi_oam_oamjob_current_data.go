// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiOamOamjobCurrentData tapi oam oamjob current data
// swagger:model tapi.oam.oamjob.CurrentData
type TapiOamOamjobCurrentData struct {
	TapiCommonLocalClass

	TapiEthCurrentDataAugmentation1

	TapiEthCurrentDataAugmentation10

	TapiEthCurrentDataAugmentation11

	TapiEthCurrentDataAugmentation12

	TapiEthCurrentDataAugmentation13

	TapiEthCurrentDataAugmentation14

	TapiEthCurrentDataAugmentation15

	TapiEthCurrentDataAugmentation2

	TapiEthCurrentDataAugmentation3

	TapiEthCurrentDataAugmentation4

	TapiEthCurrentDataAugmentation5

	TapiEthCurrentDataAugmentation6

	TapiEthCurrentDataAugmentation7

	TapiEthCurrentDataAugmentation8

	TapiEthCurrentDataAugmentation9

	// none
	ElapsedTime *TapiCommonTimeInterval `json:"elapsed-time,omitempty"`

	// in case of 24hr Current Data, at least 1 History Data.
	//                 In case of 15min Current Data, at least 16 History Data.
	//                 In case of <15min, the number of History Data shall be able to cover a span of 4 hours.
	HistoryData []*TapiOamCurrentdataHistoryData `json:"history-data"`

	// This attribute indicates the start of the current monitoring interval.
	//                 The value is bound to the quarter of an hour in case of a 15 minute interval and bound to the hour in case of a 24 hour interval.
	PeriodStartTime string `json:"period-start-time,omitempty"`

	// none
	PmDataPac *TapiOamPmDataPac `json:"pm-data-pac,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *TapiOamOamjobCurrentData) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 TapiCommonLocalClass
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.TapiCommonLocalClass = aO0

	// AO1
	var aO1 TapiEthCurrentDataAugmentation1
	if err := swag.ReadJSON(raw, &aO1); err != nil {
		return err
	}
	m.TapiEthCurrentDataAugmentation1 = aO1

	// AO2
	var aO2 TapiEthCurrentDataAugmentation10
	if err := swag.ReadJSON(raw, &aO2); err != nil {
		return err
	}
	m.TapiEthCurrentDataAugmentation10 = aO2

	// AO3
	var aO3 TapiEthCurrentDataAugmentation11
	if err := swag.ReadJSON(raw, &aO3); err != nil {
		return err
	}
	m.TapiEthCurrentDataAugmentation11 = aO3

	// AO4
	var aO4 TapiEthCurrentDataAugmentation12
	if err := swag.ReadJSON(raw, &aO4); err != nil {
		return err
	}
	m.TapiEthCurrentDataAugmentation12 = aO4

	// AO5
	var aO5 TapiEthCurrentDataAugmentation13
	if err := swag.ReadJSON(raw, &aO5); err != nil {
		return err
	}
	m.TapiEthCurrentDataAugmentation13 = aO5

	// AO6
	var aO6 TapiEthCurrentDataAugmentation14
	if err := swag.ReadJSON(raw, &aO6); err != nil {
		return err
	}
	m.TapiEthCurrentDataAugmentation14 = aO6

	// AO7
	var aO7 TapiEthCurrentDataAugmentation15
	if err := swag.ReadJSON(raw, &aO7); err != nil {
		return err
	}
	m.TapiEthCurrentDataAugmentation15 = aO7

	// AO8
	var aO8 TapiEthCurrentDataAugmentation2
	if err := swag.ReadJSON(raw, &aO8); err != nil {
		return err
	}
	m.TapiEthCurrentDataAugmentation2 = aO8

	// AO9
	var aO9 TapiEthCurrentDataAugmentation3
	if err := swag.ReadJSON(raw, &aO9); err != nil {
		return err
	}
	m.TapiEthCurrentDataAugmentation3 = aO9

	// AO10
	var aO10 TapiEthCurrentDataAugmentation4
	if err := swag.ReadJSON(raw, &aO10); err != nil {
		return err
	}
	m.TapiEthCurrentDataAugmentation4 = aO10

	// AO11
	var aO11 TapiEthCurrentDataAugmentation5
	if err := swag.ReadJSON(raw, &aO11); err != nil {
		return err
	}
	m.TapiEthCurrentDataAugmentation5 = aO11

	// AO12
	var aO12 TapiEthCurrentDataAugmentation6
	if err := swag.ReadJSON(raw, &aO12); err != nil {
		return err
	}
	m.TapiEthCurrentDataAugmentation6 = aO12

	// AO13
	var aO13 TapiEthCurrentDataAugmentation7
	if err := swag.ReadJSON(raw, &aO13); err != nil {
		return err
	}
	m.TapiEthCurrentDataAugmentation7 = aO13

	// AO14
	var aO14 TapiEthCurrentDataAugmentation8
	if err := swag.ReadJSON(raw, &aO14); err != nil {
		return err
	}
	m.TapiEthCurrentDataAugmentation8 = aO14

	// AO15
	var aO15 TapiEthCurrentDataAugmentation9
	if err := swag.ReadJSON(raw, &aO15); err != nil {
		return err
	}
	m.TapiEthCurrentDataAugmentation9 = aO15

	// AO16
	var dataAO16 struct {
		ElapsedTime *TapiCommonTimeInterval `json:"elapsed-time,omitempty"`

		HistoryData []*TapiOamCurrentdataHistoryData `json:"history-data"`

		PeriodStartTime string `json:"period-start-time,omitempty"`

		PmDataPac *TapiOamPmDataPac `json:"pm-data-pac,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO16); err != nil {
		return err
	}

	m.ElapsedTime = dataAO16.ElapsedTime

	m.HistoryData = dataAO16.HistoryData

	m.PeriodStartTime = dataAO16.PeriodStartTime

	m.PmDataPac = dataAO16.PmDataPac

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m TapiOamOamjobCurrentData) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 17)

	aO0, err := swag.WriteJSON(m.TapiCommonLocalClass)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	aO1, err := swag.WriteJSON(m.TapiEthCurrentDataAugmentation1)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO1)

	aO2, err := swag.WriteJSON(m.TapiEthCurrentDataAugmentation10)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO2)

	aO3, err := swag.WriteJSON(m.TapiEthCurrentDataAugmentation11)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO3)

	aO4, err := swag.WriteJSON(m.TapiEthCurrentDataAugmentation12)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO4)

	aO5, err := swag.WriteJSON(m.TapiEthCurrentDataAugmentation13)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO5)

	aO6, err := swag.WriteJSON(m.TapiEthCurrentDataAugmentation14)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO6)

	aO7, err := swag.WriteJSON(m.TapiEthCurrentDataAugmentation15)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO7)

	aO8, err := swag.WriteJSON(m.TapiEthCurrentDataAugmentation2)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO8)

	aO9, err := swag.WriteJSON(m.TapiEthCurrentDataAugmentation3)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO9)

	aO10, err := swag.WriteJSON(m.TapiEthCurrentDataAugmentation4)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO10)

	aO11, err := swag.WriteJSON(m.TapiEthCurrentDataAugmentation5)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO11)

	aO12, err := swag.WriteJSON(m.TapiEthCurrentDataAugmentation6)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO12)

	aO13, err := swag.WriteJSON(m.TapiEthCurrentDataAugmentation7)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO13)

	aO14, err := swag.WriteJSON(m.TapiEthCurrentDataAugmentation8)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO14)

	aO15, err := swag.WriteJSON(m.TapiEthCurrentDataAugmentation9)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO15)

	var dataAO16 struct {
		ElapsedTime *TapiCommonTimeInterval `json:"elapsed-time,omitempty"`

		HistoryData []*TapiOamCurrentdataHistoryData `json:"history-data"`

		PeriodStartTime string `json:"period-start-time,omitempty"`

		PmDataPac *TapiOamPmDataPac `json:"pm-data-pac,omitempty"`
	}

	dataAO16.ElapsedTime = m.ElapsedTime

	dataAO16.HistoryData = m.HistoryData

	dataAO16.PeriodStartTime = m.PeriodStartTime

	dataAO16.PmDataPac = m.PmDataPac

	jsonDataAO16, errAO16 := swag.WriteJSON(dataAO16)
	if errAO16 != nil {
		return nil, errAO16
	}
	_parts = append(_parts, jsonDataAO16)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this tapi oam oamjob current data
func (m *TapiOamOamjobCurrentData) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with TapiCommonLocalClass
	if err := m.TapiCommonLocalClass.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthCurrentDataAugmentation1
	if err := m.TapiEthCurrentDataAugmentation1.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthCurrentDataAugmentation10
	if err := m.TapiEthCurrentDataAugmentation10.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthCurrentDataAugmentation11
	if err := m.TapiEthCurrentDataAugmentation11.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthCurrentDataAugmentation12
	if err := m.TapiEthCurrentDataAugmentation12.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthCurrentDataAugmentation13
	if err := m.TapiEthCurrentDataAugmentation13.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthCurrentDataAugmentation14
	if err := m.TapiEthCurrentDataAugmentation14.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthCurrentDataAugmentation15
	if err := m.TapiEthCurrentDataAugmentation15.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthCurrentDataAugmentation2
	if err := m.TapiEthCurrentDataAugmentation2.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthCurrentDataAugmentation3
	if err := m.TapiEthCurrentDataAugmentation3.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthCurrentDataAugmentation4
	if err := m.TapiEthCurrentDataAugmentation4.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthCurrentDataAugmentation5
	if err := m.TapiEthCurrentDataAugmentation5.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthCurrentDataAugmentation6
	if err := m.TapiEthCurrentDataAugmentation6.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthCurrentDataAugmentation7
	if err := m.TapiEthCurrentDataAugmentation7.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthCurrentDataAugmentation8
	if err := m.TapiEthCurrentDataAugmentation8.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiEthCurrentDataAugmentation9
	if err := m.TapiEthCurrentDataAugmentation9.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateElapsedTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHistoryData(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePmDataPac(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiOamOamjobCurrentData) validateElapsedTime(formats strfmt.Registry) error {

	if swag.IsZero(m.ElapsedTime) { // not required
		return nil
	}

	if m.ElapsedTime != nil {
		if err := m.ElapsedTime.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("elapsed-time")
			}
			return err
		}
	}

	return nil
}

func (m *TapiOamOamjobCurrentData) validateHistoryData(formats strfmt.Registry) error {

	if swag.IsZero(m.HistoryData) { // not required
		return nil
	}

	for i := 0; i < len(m.HistoryData); i++ {
		if swag.IsZero(m.HistoryData[i]) { // not required
			continue
		}

		if m.HistoryData[i] != nil {
			if err := m.HistoryData[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("history-data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *TapiOamOamjobCurrentData) validatePmDataPac(formats strfmt.Registry) error {

	if swag.IsZero(m.PmDataPac) { // not required
		return nil
	}

	if m.PmDataPac != nil {
		if err := m.PmDataPac.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pm-data-pac")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiOamOamjobCurrentData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiOamOamjobCurrentData) UnmarshalBinary(b []byte) error {
	var res TapiOamOamjobCurrentData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
