// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiOduOduMepPac tapi odu odu mep pac
// swagger:model tapi.odu.OduMepPac
type TapiOduOduMepPac struct {
	TapiOduOduMipPac

	// This attribute is for configuring the delay measurement process at the trail termination function represented by the subject TTP object class. It models the MI_DM_Source MI signal. If MI_DM_Source is false, then the value of the DMp bit is determined by the RI_DM. If MI_DM_Source is true, then the value of the DMp bit is set to MI_DMValue.
	DmSource *bool `json:"dm-source,omitempty"`

	// This attribute is for setting the DMp and DMti bits of the delay measurement process. The value of 'true' sets the DMp and DMti bits to 0 and the value of 'false' to 1.
	DmValue *bool `json:"dm-value,omitempty"`

	// The Trail Trace Identifier (TTI) information, provisioned by the managing system at the termination source, to be placed in the TTI overhead position of the source of a trail for transmission.
	//
	Txti string `json:"txti,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *TapiOduOduMepPac) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 TapiOduOduMipPac
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.TapiOduOduMipPac = aO0

	// AO1
	var dataAO1 struct {
		DmSource *bool `json:"dm-source,omitempty"`

		DmValue *bool `json:"dm-value,omitempty"`

		Txti string `json:"txti,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.DmSource = dataAO1.DmSource

	m.DmValue = dataAO1.DmValue

	m.Txti = dataAO1.Txti

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m TapiOduOduMepPac) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.TapiOduOduMipPac)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	var dataAO1 struct {
		DmSource *bool `json:"dm-source,omitempty"`

		DmValue *bool `json:"dm-value,omitempty"`

		Txti string `json:"txti,omitempty"`
	}

	dataAO1.DmSource = m.DmSource

	dataAO1.DmValue = m.DmValue

	dataAO1.Txti = m.Txti

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this tapi odu odu mep pac
func (m *TapiOduOduMepPac) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with TapiOduOduMipPac
	if err := m.TapiOduOduMipPac.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *TapiOduOduMepPac) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiOduOduMepPac) UnmarshalBinary(b []byte) error {
	var res TapiOduOduMepPac
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
