// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiEthTrafficConditioningConfiguration tapi eth traffic conditioning configuration
// swagger:model tapi.eth.TrafficConditioningConfiguration
type TapiEthTrafficConditioningConfiguration struct {

	// This attribute indicates the Committed Burst Size in bytes.
	Cbs int32 `json:"cbs,omitempty"`

	// This attribute indicates the Committed Information Rate in bits/s.
	Cir int32 `json:"cir,omitempty"`

	// This attribute indicates the colour mode.
	ColourMode TapiEthColourMode `json:"colour-mode,omitempty"`

	// This attribute indicates the coupling flag.
	CouplingFlag *bool `json:"coupling-flag,omitempty"`

	// This attribute indicates the Excess Burst Size in bytes.
	Ebs int32 `json:"ebs,omitempty"`

	// This attribute indicates the Excess Information Rate in bits/s.
	Eir int32 `json:"eir,omitempty"`

	// This attribute indicates the queue id.
	QueueID int32 `json:"queue-id,omitempty"`
}

// Validate validates this tapi eth traffic conditioning configuration
func (m *TapiEthTrafficConditioningConfiguration) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateColourMode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiEthTrafficConditioningConfiguration) validateColourMode(formats strfmt.Registry) error {

	if swag.IsZero(m.ColourMode) { // not required
		return nil
	}

	if err := m.ColourMode.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("colour-mode")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiEthTrafficConditioningConfiguration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiEthTrafficConditioningConfiguration) UnmarshalBinary(b []byte) error {
	var res TapiEthTrafficConditioningConfiguration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
