// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiEthEthMepCommon tapi eth eth mep common
// swagger:model tapi.eth.EthMepCommon
type TapiEthEthMepCommon struct {

	// This attribute models the MI_CC_Pri signal defined in G.8021 and configured as specified in G8051. It is the priority at which the CCM message should be sent.
	CcPriority *int32 `json:"cc-priority,omitempty"`

	// This attribute specifies the directionality of the Ethernet MEP with respect to the associated CEP. The value of TRUE means that the sink part of the MEP terminates the same signal direction as the sink part of the CEP. The Source part behaves similarly. This attribute is meaningful only when CEP is bidirectional.
	Codirectional *bool `json:"codirectional,omitempty"`

	// This attribute models the MI_LCK_Period signal defined in G.8021 and configured as specified in G8051. It is the frequency at which the LCK messages should be sent.
	//                 range of type : 1s, 1min
	LckPeriod TapiEthOamPeriod `json:"lck-period,omitempty"`

	// This attribute models the MI_LCK_Pri signal defined in G.8021 and configured as specified in G8051. It is the priority at which the LCK messages should be sent.
	LckPriority *int32 `json:"lck-priority,omitempty"`

	// IEEE P802.1Qcx/D0.3:
	//                 MEF 38:
	//                 Integer that is unique among all the MEPs in the same Maintenance Association (MEG).
	//                 G.8052:
	//                 This attribute contains the identifier of the MEP.
	MepIdentifier int32 `json:"mep-identifier,omitempty"`
}

// Validate validates this tapi eth eth mep common
func (m *TapiEthEthMepCommon) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLckPeriod(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiEthEthMepCommon) validateLckPeriod(formats strfmt.Registry) error {

	if swag.IsZero(m.LckPeriod) { // not required
		return nil
	}

	if err := m.LckPeriod.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("lck-period")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiEthEthMepCommon) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiEthEthMepCommon) UnmarshalBinary(b []byte) error {
	var res TapiEthEthMepCommon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
