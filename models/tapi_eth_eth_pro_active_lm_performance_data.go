// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiEthEthProActiveLmPerformanceData tapi eth eth pro active lm performance data
// swagger:model tapi.eth.EthProActiveLmPerformanceData
type TapiEthEthProActiveLmPerformanceData struct {

	// A generalized (bidirectional) UAS.
	//                 MEF 35.1: A 32-bit counter reflecting the number of delta-t intervals evaluated as Unavailable (i.e., for which A<Controller, Responder>(delta-t) = 0).
	//
	BidirUnavailableIntervals int32 `json:"bidir-unavailable-intervals,omitempty"`

	// This attribute contains the statistical far end performnace parameters.
	StatisticalFarEndLmParameters *TapiEthStatisticalLmPerformanceParameters `json:"statistical-far-end-lm-parameters,omitempty"`

	// This attribute contains the statistical near end performnace parameters.
	StatisticalNearEndLmParameters *TapiEthStatisticalLmPerformanceParameters `json:"statistical-near-end-lm-parameters,omitempty"`

	// This attribute contains the results of an on-demand synthetic loss measurement job in the egress direction.
	TotalCountersFarEndLmParameters *TapiEthTotalCountersLmPerformanceParameters `json:"total-counters-far-end-lm-parameters,omitempty"`

	// This attribute contains the results of an on-demand synthetic loss measurement job in the ingress direction.
	TotalCountersNearEndLmParameters *TapiEthTotalCountersLmPerformanceParameters `json:"total-counters-near-end-lm-parameters,omitempty"`
}

// Validate validates this tapi eth eth pro active lm performance data
func (m *TapiEthEthProActiveLmPerformanceData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatisticalFarEndLmParameters(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatisticalNearEndLmParameters(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalCountersFarEndLmParameters(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalCountersNearEndLmParameters(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiEthEthProActiveLmPerformanceData) validateStatisticalFarEndLmParameters(formats strfmt.Registry) error {

	if swag.IsZero(m.StatisticalFarEndLmParameters) { // not required
		return nil
	}

	if m.StatisticalFarEndLmParameters != nil {
		if err := m.StatisticalFarEndLmParameters.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("statistical-far-end-lm-parameters")
			}
			return err
		}
	}

	return nil
}

func (m *TapiEthEthProActiveLmPerformanceData) validateStatisticalNearEndLmParameters(formats strfmt.Registry) error {

	if swag.IsZero(m.StatisticalNearEndLmParameters) { // not required
		return nil
	}

	if m.StatisticalNearEndLmParameters != nil {
		if err := m.StatisticalNearEndLmParameters.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("statistical-near-end-lm-parameters")
			}
			return err
		}
	}

	return nil
}

func (m *TapiEthEthProActiveLmPerformanceData) validateTotalCountersFarEndLmParameters(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalCountersFarEndLmParameters) { // not required
		return nil
	}

	if m.TotalCountersFarEndLmParameters != nil {
		if err := m.TotalCountersFarEndLmParameters.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("total-counters-far-end-lm-parameters")
			}
			return err
		}
	}

	return nil
}

func (m *TapiEthEthProActiveLmPerformanceData) validateTotalCountersNearEndLmParameters(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalCountersNearEndLmParameters) { // not required
		return nil
	}

	if m.TotalCountersNearEndLmParameters != nil {
		if err := m.TotalCountersNearEndLmParameters.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("total-counters-near-end-lm-parameters")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiEthEthProActiveLmPerformanceData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiEthEthProActiveLmPerformanceData) UnmarshalBinary(b []byte) error {
	var res TapiEthEthProActiveLmPerformanceData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
