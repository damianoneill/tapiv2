// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiEthEthCfmLinkTracePac tapi eth eth cfm link trace pac
// swagger:model tapi.eth.EthCfmLinkTracePac
type TapiEthEthCfmLinkTracePac struct {

	// IEEE P802.1Qcx/D0.3:
	//                 MEF 38:
	//                 Drop eligible bit value to be used in the VLAN tag, if present in the transmitted frame.
	DropEligibility *bool `json:"drop-eligibility,omitempty"`

	// IEEE P802.1Qcx/D0.3:
	//                 MEF 38:
	//                 The flags field for the LTMs transmitted by the MEP.
	LtmFlags string `json:"ltm-flags,omitempty"`

	// IEEE P802.1Qcx/D0.3:
	//                 The interval between LTM transmissions to be used by all MEPs in the Maintenance Association.
	Period TapiEthOamPeriod `json:"period,omitempty"`

	// IEEE P802.1Qcx/D0.3:
	//                 MEF 38:
	//                 An indication of a destination MEP, the MEPID of a MEP.
	//                 Alternative to destination MAC address.
	//
	TargetMepID int32 `json:"target-mep-id,omitempty"`
}

// Validate validates this tapi eth eth cfm link trace pac
func (m *TapiEthEthCfmLinkTracePac) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePeriod(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiEthEthCfmLinkTracePac) validatePeriod(formats strfmt.Registry) error {

	if swag.IsZero(m.Period) { // not required
		return nil
	}

	if err := m.Period.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("period")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiEthEthCfmLinkTracePac) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiEthEthCfmLinkTracePac) UnmarshalBinary(b []byte) error {
	var res TapiEthEthCfmLinkTracePac
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
