// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiOduOduConnectivityServiceEndPointSpec tapi odu odu connectivity service end point spec
// swagger:model tapi.odu.OduConnectivityServiceEndPointSpec
type TapiOduOduConnectivityServiceEndPointSpec struct {

	// This attribute is applicable when the ODU CTP object instance represents a lower order ODU CTP Sink at the client layer of the ODUP/ODU[i]j or ODUP/ODUj-21 adaptation function.
	//                 This attribute is a 2-digit Hex code that indicates the new accepted payload type.
	//                 Valid values are defined in Table 15-8 of ITU-T Recommendation G.709 with one additional value UN_INTERPRETABLE.
	AcceptedPayloadType *TapiOduOduPayloadType `json:"accepted-payload-type,omitempty"`

	// This attributes indicates the configured mapping type.
	ConfiguredMappingType TapiOduMappingType `json:"configured-mapping-type,omitempty"`

	// This attribute specifies the type of the ODU termination point.
	OduType string `json:"odu-type,omitempty"`

	// This attribute is applicable for ODU2 and ODU3 CTP only. It indicates the slot size of the ODU CTP.
	OpuTributarySlotSize TapiOduOduSlotSize `json:"opu-tributary-slot-size,omitempty"`

	// This attribute identifies the tributary port number that is associated with the ODU CTP.
	//                 range of type : The value range depends on the size of the Tributary Port Number (TPN) field used which depends on th server-layer ODU or OTU.
	//                 In case of ODUk mapping into OTUk, there is no TPN field, so the tributaryPortNumber shall be zero.
	//                 In case of LO ODUj mapping over ODU1, ODU2 or ODU3, the TPN is encoded in a 6-bit field so the value range is 0-63. See clause 14.4.1/G.709-2016.
	//                 In case of LO ODUj mapping over ODU4, the TPN is encoded in a 7-bit field so the value range is 0-127. See clause 14.4.1.4/G.709-2016.
	//                 In case of ODUk mapping over ODUCn, the TPN is encoded in a 14-bit field so the value range is 0-16383. See clause 20.4.1.1/G.709-2016.
	//
	TributaryPortNumber int32 `json:"tributary-port-number,omitempty"`

	// This attribute contains a set of distinct (i.e. unique) integers (e.g. 2, 3, 5, 9, 15 representing the tributary slots TS2, TS3, TS5, TS9 and TS15) which represents the resources occupied by the Low Order ODU Link Connection (e.g. carrying an ODUflex with a bit rate of 6.25G).
	//                 This attribute applies when the LO ODU_ ConnectionTerminationPoint connects with an HO ODU_TrailTerminationPoint object.
	//                 It will not apply if this ODU_ ConnectionTerminationPoint object directly connects to an OTU_TrailTerminationPoint object (i.e. OTU has no trib slots).
	//                 The upper bound of the integer allowed in this set is a function of the HO-ODU server layer to which the ODU connection has been mapped (adapted).
	//                 Thus, for example, M=8/32/80 for ODU2/ODU3/ODU4 server layers (respectively). Note that the value of this attribute can be changed only in the case of ODUflex and has to be through specific operations (i.e. not be changing the attribute tributarySlotList directly).
	TributarySlotList []int32 `json:"tributary-slot-list"`
}

// Validate validates this tapi odu odu connectivity service end point spec
func (m *TapiOduOduConnectivityServiceEndPointSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAcceptedPayloadType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateConfiguredMappingType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOpuTributarySlotSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiOduOduConnectivityServiceEndPointSpec) validateAcceptedPayloadType(formats strfmt.Registry) error {

	if swag.IsZero(m.AcceptedPayloadType) { // not required
		return nil
	}

	if m.AcceptedPayloadType != nil {
		if err := m.AcceptedPayloadType.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("accepted-payload-type")
			}
			return err
		}
	}

	return nil
}

func (m *TapiOduOduConnectivityServiceEndPointSpec) validateConfiguredMappingType(formats strfmt.Registry) error {

	if swag.IsZero(m.ConfiguredMappingType) { // not required
		return nil
	}

	if err := m.ConfiguredMappingType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("configured-mapping-type")
		}
		return err
	}

	return nil
}

func (m *TapiOduOduConnectivityServiceEndPointSpec) validateOpuTributarySlotSize(formats strfmt.Registry) error {

	if swag.IsZero(m.OpuTributarySlotSize) { // not required
		return nil
	}

	if err := m.OpuTributarySlotSize.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("opu-tributary-slot-size")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiOduOduConnectivityServiceEndPointSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiOduOduConnectivityServiceEndPointSpec) UnmarshalBinary(b []byte) error {
	var res TapiOduOduConnectivityServiceEndPointSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
