// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// TapiEthEtyPhyType tapi eth ety phy type
// swagger:model tapi.eth.EtyPhyType
type TapiEthEtyPhyType string

const (

	// TapiEthEtyPhyTypeOTHER captures enum value "OTHER"
	TapiEthEtyPhyTypeOTHER TapiEthEtyPhyType = "OTHER"

	// TapiEthEtyPhyTypeUNKNOWN captures enum value "UNKNOWN"
	TapiEthEtyPhyTypeUNKNOWN TapiEthEtyPhyType = "UNKNOWN"

	// TapiEthEtyPhyTypeNONE captures enum value "NONE"
	TapiEthEtyPhyTypeNONE TapiEthEtyPhyType = "NONE"

	// TapiEthEtyPhyTypeNr2BASETL captures enum value "2BASE_TL"
	TapiEthEtyPhyTypeNr2BASETL TapiEthEtyPhyType = "2BASE_TL"

	// TapiEthEtyPhyTypeNr10MBITS captures enum value "10MBIT_S"
	TapiEthEtyPhyTypeNr10MBITS TapiEthEtyPhyType = "10MBIT_S"

	// TapiEthEtyPhyTypeNr10PASSTS captures enum value "10PASS_TS"
	TapiEthEtyPhyTypeNr10PASSTS TapiEthEtyPhyType = "10PASS_TS"

	// TapiEthEtyPhyTypeNr100BASET4 captures enum value "100BASE_T4"
	TapiEthEtyPhyTypeNr100BASET4 TapiEthEtyPhyType = "100BASE_T4"

	// TapiEthEtyPhyTypeNr100BASEX captures enum value "100BASE_X"
	TapiEthEtyPhyTypeNr100BASEX TapiEthEtyPhyType = "100BASE_X"

	// TapiEthEtyPhyTypeNr100BASET2 captures enum value "100BASE_T2"
	TapiEthEtyPhyTypeNr100BASET2 TapiEthEtyPhyType = "100BASE_T2"

	// TapiEthEtyPhyTypeNr1000BASEX captures enum value "1000BASE_X"
	TapiEthEtyPhyTypeNr1000BASEX TapiEthEtyPhyType = "1000BASE_X"

	// TapiEthEtyPhyTypeNr1000BASET captures enum value "1000BASE_T"
	TapiEthEtyPhyTypeNr1000BASET TapiEthEtyPhyType = "1000BASE_T"

	// TapiEthEtyPhyTypeNr10GBASEX captures enum value "10GBASE-X"
	TapiEthEtyPhyTypeNr10GBASEX TapiEthEtyPhyType = "10GBASE-X"

	// TapiEthEtyPhyTypeNr10GBASER captures enum value "10GBASE_R"
	TapiEthEtyPhyTypeNr10GBASER TapiEthEtyPhyType = "10GBASE_R"

	// TapiEthEtyPhyTypeNr10GBASEW captures enum value "10GBASE_W"
	TapiEthEtyPhyTypeNr10GBASEW TapiEthEtyPhyType = "10GBASE_W"
)

// for schema
var tapiEthEtyPhyTypeEnum []interface{}

func init() {
	var res []TapiEthEtyPhyType
	if err := json.Unmarshal([]byte(`["OTHER","UNKNOWN","NONE","2BASE_TL","10MBIT_S","10PASS_TS","100BASE_T4","100BASE_X","100BASE_T2","1000BASE_X","1000BASE_T","10GBASE-X","10GBASE_R","10GBASE_W"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tapiEthEtyPhyTypeEnum = append(tapiEthEtyPhyTypeEnum, v)
	}
}

func (m TapiEthEtyPhyType) validateTapiEthEtyPhyTypeEnum(path, location string, value TapiEthEtyPhyType) error {
	if err := validate.Enum(path, location, value, tapiEthEtyPhyTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this tapi eth ety phy type
func (m TapiEthEtyPhyType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTapiEthEtyPhyTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
