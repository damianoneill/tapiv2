// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// TapiPhotonicMediaLaserControlStatusType tapi photonic media laser control status type
// swagger:model tapi.photonic.media.LaserControlStatusType
type TapiPhotonicMediaLaserControlStatusType string

const (

	// TapiPhotonicMediaLaserControlStatusTypeON captures enum value "ON"
	TapiPhotonicMediaLaserControlStatusTypeON TapiPhotonicMediaLaserControlStatusType = "ON"

	// TapiPhotonicMediaLaserControlStatusTypeOFF captures enum value "OFF"
	TapiPhotonicMediaLaserControlStatusTypeOFF TapiPhotonicMediaLaserControlStatusType = "OFF"

	// TapiPhotonicMediaLaserControlStatusTypePULSING captures enum value "PULSING"
	TapiPhotonicMediaLaserControlStatusTypePULSING TapiPhotonicMediaLaserControlStatusType = "PULSING"

	// TapiPhotonicMediaLaserControlStatusTypeUNDEFINED captures enum value "UNDEFINED"
	TapiPhotonicMediaLaserControlStatusTypeUNDEFINED TapiPhotonicMediaLaserControlStatusType = "UNDEFINED"
)

// for schema
var tapiPhotonicMediaLaserControlStatusTypeEnum []interface{}

func init() {
	var res []TapiPhotonicMediaLaserControlStatusType
	if err := json.Unmarshal([]byte(`["ON","OFF","PULSING","UNDEFINED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tapiPhotonicMediaLaserControlStatusTypeEnum = append(tapiPhotonicMediaLaserControlStatusTypeEnum, v)
	}
}

func (m TapiPhotonicMediaLaserControlStatusType) validateTapiPhotonicMediaLaserControlStatusTypeEnum(path, location string, value TapiPhotonicMediaLaserControlStatusType) error {
	if err := validate.Enum(path, location, value, tapiPhotonicMediaLaserControlStatusTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this tapi photonic media laser control status type
func (m TapiPhotonicMediaLaserControlStatusType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTapiPhotonicMediaLaserControlStatusTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
