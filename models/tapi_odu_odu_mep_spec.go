// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiOduOduMepSpec tapi odu odu mep spec
// swagger:model tapi.odu.OduMepSpec
type TapiOduOduMepSpec struct {

	// none
	OduDefect *TapiOduOduDefectPac `json:"odu-defect,omitempty"`

	// none
	OduMep *TapiOduOduMepPac `json:"odu-mep,omitempty"`

	// none
	OduNcm *TapiOduOduNcmPac `json:"odu-ncm,omitempty"`

	// none
	OduPm *TapiOduOduPmPac `json:"odu-pm,omitempty"`

	// none
	OduTcm *TapiOduOduTcmMepPac `json:"odu-tcm,omitempty"`
}

// Validate validates this tapi odu odu mep spec
func (m *TapiOduOduMepSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOduDefect(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOduMep(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOduNcm(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOduPm(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOduTcm(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiOduOduMepSpec) validateOduDefect(formats strfmt.Registry) error {

	if swag.IsZero(m.OduDefect) { // not required
		return nil
	}

	if m.OduDefect != nil {
		if err := m.OduDefect.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("odu-defect")
			}
			return err
		}
	}

	return nil
}

func (m *TapiOduOduMepSpec) validateOduMep(formats strfmt.Registry) error {

	if swag.IsZero(m.OduMep) { // not required
		return nil
	}

	if m.OduMep != nil {
		if err := m.OduMep.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("odu-mep")
			}
			return err
		}
	}

	return nil
}

func (m *TapiOduOduMepSpec) validateOduNcm(formats strfmt.Registry) error {

	if swag.IsZero(m.OduNcm) { // not required
		return nil
	}

	if m.OduNcm != nil {
		if err := m.OduNcm.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("odu-ncm")
			}
			return err
		}
	}

	return nil
}

func (m *TapiOduOduMepSpec) validateOduPm(formats strfmt.Registry) error {

	if swag.IsZero(m.OduPm) { // not required
		return nil
	}

	if m.OduPm != nil {
		if err := m.OduPm.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("odu-pm")
			}
			return err
		}
	}

	return nil
}

func (m *TapiOduOduMepSpec) validateOduTcm(formats strfmt.Registry) error {

	if swag.IsZero(m.OduTcm) { // not required
		return nil
	}

	if m.OduTcm != nil {
		if err := m.OduTcm.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("odu-tcm")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiOduOduMepSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiOduOduMepSpec) UnmarshalBinary(b []byte) error {
	var res TapiOduOduMepSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
