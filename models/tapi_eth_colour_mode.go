// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// TapiEthColourMode tapi eth colour mode
// swagger:model tapi.eth.ColourMode
type TapiEthColourMode string

const (

	// TapiEthColourModeCOLOURBLIND captures enum value "COLOUR_BLIND"
	TapiEthColourModeCOLOURBLIND TapiEthColourMode = "COLOUR_BLIND"

	// TapiEthColourModeCOLOURAWARE captures enum value "COLOUR_AWARE"
	TapiEthColourModeCOLOURAWARE TapiEthColourMode = "COLOUR_AWARE"
)

// for schema
var tapiEthColourModeEnum []interface{}

func init() {
	var res []TapiEthColourMode
	if err := json.Unmarshal([]byte(`["COLOUR_BLIND","COLOUR_AWARE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tapiEthColourModeEnum = append(tapiEthColourModeEnum, v)
	}
}

func (m TapiEthColourMode) validateTapiEthColourModeEnum(path, location string, value TapiEthColourMode) error {
	if err := validate.Enum(path, location, value, tapiEthColourModeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this tapi eth colour mode
func (m TapiEthColourMode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTapiEthColourModeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
